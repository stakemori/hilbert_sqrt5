| diff | weights of gens |
|    1 | 7, 8, 13        |
|    2 | 4, 7            |
|    3 | 3, 6            |
|    4 | 4, 5, 8         |
|    5 | 5, 6, 7, 10     |
|    6 | 2, 3, 6         |
|    7 |                 |

#+BEGIN_SRC shell :results output
  cargo test structure::tests::test_pickle_gen6_1
#+END_SRC

#+RESULTS:
#+begin_example

running 1 test
test structure::tests::test_pickle_gen6_1 ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 29 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 21 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out

#+end_example

#+BEGIN_SRC sage
  from os.path import join

  Path = os.path.expanduser('~/work/rust/hilbert_sqrt5/')
#+END_SRC

#+RESULTS:


#+BEGIN_SRC sage
  load('~/work/rust/hilbert_sqrt5/src/modstr.py')
  to_pols_normalized(load(join(Path, "data/str6gens1.sobj")))
#+END_SRC

#+RESULTS:
: [1680*g2^2*g6 + 315000*g5^2, -g2^4, 504000*g2*g5]

#+BEGIN_SRC sage
  load('~/work/rust/hilbert_sqrt5/src/modstr.py')
  to_pols_normalized(load(join(Path, "data/str6gens2.sobj")))
#+END_SRC

#+RESULTS:
: [1680*g2^2*g6, -g2^3, 63000*g5]

#+BEGIN_SRC sage
  load('~/work/rust/hilbert_sqrt5/src/modstr.py')
  to_pols_normalized(load(join(Path, "data/str6gens.sobj")))
#+END_SRC

#+RESULTS:
: [-1680*g6, -63000*g5, g2]

#+BEGIN_SRC sage
  load('~/work/rust/hilbert_sqrt5/src/modstr.py')
  [factor(a) for a in to_pols_normalized(load(join(Path, "data/str5gens1.sobj")))]
#+END_SRC

#+RESULTS:
: [(1814400) * g6 * g2^2, (-11) * g2^2 * (g2^3 - 1080*g6), (1512000) * g5 * g2^2]

#+BEGIN_SRC sage
  load('~/work/rust/hilbert_sqrt5/src/modstr.py')
  [a for a in to_pols_normalized(load(join(Path, "data/str5gens2.sobj")))]
#+END_SRC

#+RESULTS:
: [-g2^4 + 1080*g2*g6, 1632960000*g2*g5, 1814400*g2^3]

#+BEGIN_SRC sage
  load('~/work/rust/hilbert_sqrt5/src/modstr.py')
  to_pols_normalized(load(join(Path, "data/str5rel12.sobj")))
#+END_SRC

#+RESULTS:
: [g2*g5, 29937600*g6, 18144000*g5, -165*g2]

